% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{read.csv}
\alias{read.csv}
\title{Data Input (csv)}
\usage{
read.csv(
  file,
  cache = FALSE,
  na.strings = "",
  stringsAsFactors = FALSE,
  encoding = "UTF-8",
  ...
)
}
\arguments{
\item{file}{the name of the file which the data are to be read from. Each row of the table appears as one line of the file. If it does not contain an absolute path, the file name is relative to the current working directory, getwd(). Tilde-expansion is performed where supported. This can be a compressed file.}

\item{cache}{logical. Memory caching? Default \code{FALSE}.}

\item{na.strings}{a character vector of strings which are to be interpreted as \code{NA} values. Blank fields are also considered to be missing values in logical, integer, numeric and complex fields. Note that the test happens after white space is stripped from the input, so \code{na.strings} values may need their own white space stripped in advance.}

\item{stringsAsFactors}{logical: should character vectors be converted to factors?}

\item{encoding}{encoding to be assumed for input strings. It is used to mark character strings as known to be in Latin-1 or UTF-8: it is not used to re-encode the input, but allows R to handle encoded strings in their native encoding.}

\item{...}{arguments passed to \code{\link[utils:write.table]{read.csv}}}
}
\value{
return value of \code{\link[utils:write.table]{read.csv}}
}
\description{
Reads a file in table format and creates a data frame from it, with cases corresponding to lines and variables to fields in the file.
}
